exit
php -v
sudo apt install php7.4
sudo apt-get update
sudo apt -y install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
sudo apt -y install php7.4
php -v
sudo apt-get install composer
composer -v
sudo apt-get install php7.4-zip php7.4-mbstring 
composer global require laravel/installer
php -v
sudo apt-get install php7.4-xdebug
path
ls -al
vi .bashrc 
vi .profile 
vi .bashrc 
exit
ls -al
ln -s ./projects /mnt/d/Documents/toy-projects
ll
ln -s /mnt/d/Documents/toy-projects ./projects
ll
cd projects
laravel new express-royale-server
composer global about
cd ~
vi .bashrc 
~
source ~/.bashrc
laravel new express-royale-server
sudo apt-get php7.4-dom
sudo apt-get install php7.4-dom
ls -al
rm -rf express-royale-server
cd projects
laravel new express-royale-server
sudo apt-get install ssh
vi /etc/ssh/sshd_config 
sudo vi /etc/ssh/sshd_config 
sudo service sshd restart
sudo service ssh restart
cd "/home/monoless/projects/express-royale-server"
npm install
apt-get install npm
sudo apt-get install npm
cd "/home/monoless/projects/express-royale-server"
npm install
npm -v
source ~/.bashrc
npm -v
cd "/home/monoless/projects/express-royale-server"
npm install
sudo apt-get install redis
sudo apt-get inst
sudo apt-get install mariadb-server
sudo mysql_secure_installation
cd ~
sudo mysql_secure_installation
sudo service mysql status
sudo service mysql enable
sudo service mysql start
sudo service redis status
sudo service redisd
sudo mysql_secure_installation
mysql -uroot
mysql -uroot -p
sudo mysql_secure_installation
mysql -uroot -p
sudo mysql_secure_installation
mysql -uroot -p
sudo mysql_secure_installation
mysql -uroot -p
sudo mysql -uroot -p
sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf 
sudo service mysqld restart
sudo service mysql restart
sudo service redis restart
redis
cd ./projects/express-royale-server/
composer require laravel/ui 
php "/home/monoless/projects/express-royale-server/artisan" serve --host=localhost --port=8000
composer require laravel/ui
php artisan ui react
php artisan ui react --auth
npm install 
php artisan migrate
mysql -uroot -p
sudo mysql -uroot -p
mysql -uroot -p
sudo mysql -uroot -p
sudo mysql -uroot -prb24dett
sudo mysql -uroot 
php artisan migrate
php -m | grep pdo
sudo apt-get install php7.4-pdo
sudo apt-get install php7.4-pdo-mysql
php artisan migrate
sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf 
mysql --version
sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf 
sudo service mysql restart
mysql -uroot
php artisan migrate
sudo service mysql restart
sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf 
sudo service mysql restart
mysql -uroot p
mysql -uroot \
mysql -uroot 
sudo service mysql restart
php artisan migrate
npm run dev
composer require laravel/sanctum
php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider"
php artisan migrate
cd projects
ls -al
mv express-royale-server express-royale
exit
composer require pusher/pusher-php-server
sudo apt-get install php7.4-curl
composer require pusher/pusher-php-server
php "/home/monoless/projects/express-royale/artisan" serve --host=localhost --port=8000
php artisan migrate
sudo service mysql start
sudo update-rc.d mysql defaults
php artisan migrate
composer require bensampo/laravel-enum
php artisan make:enum ClubType
php artisan make:enum GameSetting
cd projects
mv express-royale express-royale2
sudo mv express-royale express-royale2
git clone https://github.com/monoless/express-royale.git express-royale2
exit
mv bin _legacy_
sudo mv bin _legacy_
git config --get-all user.name
git config user.name "monoless"
git config user.email ecst@monolife.co.kr
php artisan make:enum HealthStatus
php artisan make:enum Injure
php artisan make:enum Tactics
php artisan make:enum ItemEquipType
cd src
composer install
node -v
curl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh
curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
node -v
sudo apt-get install nodejs
node -v
npm -v
sudo npm install -g npm
npm install
cd "/home/monoless/projects/express-royale"
npm install
ls -al /etc/mysql/conf.d/
ls -al /etc/mysql/my.cnf
cp /etc/mysql/my.cnf conf/mariadb.cnf 
cat /etc/mysql/my.cnf
ll
ls -al /etc/mysql
ls -al /etc/mysql/mariadb.conf.d/
ls -al /etc/mysql/mariadb.conf.d/50-server.cnf 
cp /etc/mysql/mariadb.conf.d/50-server.cnf conf/mariadb.cnf 
php artisan make:enum EquipItemType
php artisan make:enum AttackType
php artisan make:enum ItemType
php artisan make:enum AmmoType
php artisan make:enum ArmorType
sudo service mariadb status
sudo service mysql status
sudo service mysql start
php artisan migrate --help
php artisan migrate --seed --refresh
php artisan migrate:reset --seed 
php artisan migrate:reset --help
php artisan migrate:refresh --seed
git pull
sudo service mysql start
php artisan migrate:refresh --seed
php artisan make:enum SupplyType
php artisan migrate:refresh --seed
php artisan make:enum LocationSpecialize
php artisan migrate:refresh --seed
sudo service mysql start
php artisan migrate:refresh --seed
composer dump-autoload
php artisan migrate:refresh --seed
composer dump-autoload --optimize
php artisan migrate:refresh --seed
cd storage/app/
ls -al
cd public/
ll
mv images avatar
sudo mv images avatar
ll
cd projects
ls -al
cd express-royale/
ll
cd storage/app/public/
ll
mv images avatar
ll
exit
cd storage/app/public/
git add avatar
git add avatar/*
git add -f avatar/*
cd ..
php artisan storage:link
sudo service mysql status
php artisan migrate:refresh --seed
php artisan make:enum NewsType
php artisan make:enum NewsDetailType
php artisan migrate:refresh --seed
composer require spatie/data-transfer-object
php artisan make:enum DeathType
sudo service mysql start
php artisan make:enum DeathType
composer install
php artisan make:enum DeathType
npm install --save-dev @babel/core @babel/plugin-proposal-class-properties
npm install --save-dev @babel/plugin-proposal-object-rest-spread
npm remove axios bootstrap jquery laravel-mix lodash popper.js react react-dom resolve-url-loader sass sass-loader
npm install --save-dev @babel/plugin-proposal-optional-chaining
npm install --save-dev @babel/plugin-transform-typescript
npm install --save-dev @babel/polyfill
npm remove 2babel/polyfill
npm remove @babel/polyfill
npm install --save-dev core-js
npm install --save-dev @babel/preset-env
npm install --save-dev @babel/preset-typescript
npm install --save-dev @types/node @types/webpack @types/webpack-dev-server
npm install --save-dev babel-loader
npm install --save-dev ts-node typescript webpack webpack-cli webpack-dev-server webpack-obfuscator
npm remove webpack-obfuscator
npm  i mobx mobx-react
npm install react react-dom
npm run dev
cls
clear
npm run dev
node -v
npm run dev
npm install --save-dev @types/react @types/react-dom
npm run dev
npm remove cross-env
npm run dev
rm -rf node_modules
rm package-lock.json 
npm install
npm install --save-dev laravel-mix-react-typescript-extension
php artisan preset none
php artisan help
php artisan help list
php artisan list
npm run dev
npm remove axios bootstrap jquery lodash popper.js resolve-url-loader
npm install react react-dom
sudo service mysql start
php artisan serve
npm install @types/react
npm install --save-dev @types/react
npm install --save-dev @types/react-dom
npm install react-router react-router-dom
npm install --save-dev @types/react-router @types/react-router-dom
npm install tailwindcss
npm install --save-dev @types/laravel-mix
npm install --save-dev @types/tailwindcss
npm install --save-dev @types/laravel-mix-react-typescript-extension
npm run dev
npm install pusher
npm install @types/pusher
npm  i mobx mobx-react
npm install --save-dev @types/mobx
npm i @babel/plugin-proposal-class-properties @babel/plugin-proposal-decorators
npm install --save-dev @babel/plugin-proposal-class-properties @babel/plugin-proposal-decorators
npm install --save-dev laravel-mix-polyfill
npm run dev
npm install
npm remove laravel-mix-react-typescript-extension
npm run dev
clear
npm run dev
npm install --save-dev @types/node
npm install mix-tailwindcss --save-dev
npm run dev
npm install router5
npm remove router5
npm remove mobx-react
npm install --save-dev tailwindcss
npm install mobx-state-tree
npm install mobx-react-lite
npm run dev
npm run hot
npm run watch
npm install tailwindcss-dark-mode --save-dev
npm run dev
npm remove tailwindcss-dark-mode
npm run hot
npm run watch
sudo service mysql start
php artisan serve
npm run hot
npm run dev
npm run hot
npm install --save-dev react-scripts
npm install --save-dev react-scripts-ts
npm remove browser-sync browser-sync-webpack-plugin
npm install --save-dev react-scripts-ts
npm remove react-scripts react-scripts-ts
npm install use-react-router
npm remove react-router-dom @types/react-router-dom
npm install react-router-dom 
npm install --save-dev @types/react-router-dom 
npm run hot
sudo service mysql start
php artisan serve
php artisan help serve
php artisan serve
npm run hot
npm install moment moment-timezone
npm install --save-dev @types/moment @types/moment-timezone
npm run hot
npm install axios
npm install --save-dev axios
npm install --save-dev @types/axios
npm run hot
clear
npm run hot
npm install uuid-random
npm install --save-dev @types/uuid-random
npm install --save-dev camelcase-keys-recursive
npm install camelcase-keys-recursive
npm install --save-dev @types/camelcase-keys-recursive
npm run hot
npm run dev
npm run hot
npm install --save-dev @types/mix-tailwindcss
npm install --save-dev @types/laravel-mix-polyfill
sudo mysql start
sudo service mysql start
php artisan serve
npm run hot
npm install i18next i18next-browser-languagedetector
npm install markdown-it
npm install react-i18next
npm remove markdown-it
npm install react-markdown
npm install --save-dev @types/i18next @types/i18next-browser-lanuagedetector
npm install --save-dev @types/i18next-browser-lanuagedetector
npm run hot
npm remove react-markdown
npm install i18next-markdown-jsx-plugin
npm install --save-dev @types/i18next-markdown-jsx-plugin
sudo service mysql start
php artisan serve
npm run hot
npm remove i18next-markdown-jsx-plugin
php artisan tinker
npm install marked
npm install --save-dev @types/makred
npm install --save-dev @types/marked
npm run hot
npm install i18next-sprintf-postprocessor
npm run hot
npm remove i18next-sprintf-postprocessor
npm run hot
npm remove marked
npm install react-markdown
npm run hot
npm remove mobx mobx-state-tree mobx-react-lite 
npm install recoil
npm run hot
npm install --save-dev @types/recoil
npm remove recoil
npm install
npm run hot
npm install --save react-markdown
npm run hot
sudo service mysql start
php artisan serve
sudo service mysql start
php artisan serve
npm run hot
git pull
time
date
git pull
ll /etc/ssl/certs/ca-certificates.crt 
cat /etc/ssl/certs/ca-certificates.crt 
git pull
git config --global http.sslverify false
git pull
sudo service mysql start
php artisan serve
sudo service mysql start
php artisan serve
php artisan migrate:fresh --seed
npm run hot
composer require getsolaris/laravel-make-service
composer install
composer require getsolaris/laravel-make-service
php -
php -v
php -m | 
sudo composer require getsolaris/laravel-make-service
php -r "print_r(openssl_get_cert_locations());"
date
rdate -s time.bora.net
sudo apt install rdate
rdate -s time.bora.net
sudo rdate -s time.bora.net
php -r "print_r(openssl_get_cert_locations());"
composer config --global cafile "/usr/lib/ssl/cert.pem"
npm run ht
npm run hot
php artisan migrate:fresh --seed
service mysql start
service mysql status
sudo service mysql start
php artisan migrate:fresh --seed
php artisan serve
